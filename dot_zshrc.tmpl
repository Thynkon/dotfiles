# Source Prezto.
if [[ -s "${XDG_DATA_HOME}/zprezto/init.zsh" ]]; then
  source "${XDG_DATA_HOME}/zprezto/init.zsh"
fi

# load aliases
if [[ -f "${HOME}/.aliases" ]]; then
  source "${HOME}/.aliases"
fi

### Zsh plugin manager
source ${XDG_DATA_HOME}/zplug/init.zsh
zplug "plugins/adb",   from:oh-my-zsh
zplug "plugins/colored-man-pages",   from:oh-my-zsh
zplug "plugins/docker-compose",   from:oh-my-zsh
zplug "plugins/fd",   from:oh-my-zsh
zplug "plugins/fzf",   from:oh-my-zsh
zplug "plugins/laravel",   from:oh-my-zsh
zplug "plugins/mvn",   from:oh-my-zsh
zplug "plugins/rust",   from:oh-my-zsh
zplug "djui/alias-tips"
zplug "spwhitt/nix-zsh-completions"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

# Then, source plugins and add commands to $PATH
zplug load

### VIM mode
bindkey -v

# Map "jk" to "esc"
bindkey 'jk' vi-cmd-mode

# If KEYTIMEOUT is lesser than 20ms the
# keybing above wont work
export KEYTIMEOUT=20

# enable zsh's completion menu
zmodload zsh/complist
# Use vim keys in tab complete menu:
bindkey -M menuselect 'j' vi-backward-char
bindkey -M menuselect 'l' vi-up-line-or-history
bindkey -M menuselect 'Ã©' vi-forward-char
bindkey -M menuselect 'k' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# User configuration
export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Alias tip: "

### Functions
getspec() {
  rpm2cpio $1 | cpio -civ '*.spec'
}

[ -f "${XDG_CONFIG_HOME}/fzf/fzf.zsh" ] && source "${XDG_CONFIG_HOME}/fzf/fzf.zsh"

# Enable fzf completions
{{ if eq (index .chezmoi.osRelease "id") "arch" }}
source /usr/share/fzf/key-bindings.zsh
{{ else }}
if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi
{{ end}}

[[ -f "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"

eval "$(zoxide init zsh)"
eval "$(starship init zsh)"
