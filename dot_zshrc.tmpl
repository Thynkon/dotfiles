# cleanup home directory
export XDG_CACHE_HOME=$HOME/.cache
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share

# Define a custom file for compdump
# oh-my-zsh uses this variable and calls compinit
ZSH_CACHE_DIR="${XDG_CACHE_HOME}/zsh"
if [[ ! -d "${ZSH_CACHE_DIR}" ]]; then
	mkdir -p "${ZSH_CACHE_DIR}"
fi
export ZSH_COMPDUMP=$ZSH_CACHE_DIR/.zcompdump-${(%):-%m}-${ZSH_VERSION}

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.config/oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(
	git
	zsh-syntax-highlighting
	alias-tips zsh-completions
	zsh-autosuggestions
	rust
	cargo
	rustup
	docker
	docker-compose
	laravel
)

source $ZSH/oh-my-zsh.sh

# User configuration
export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Alias tip: "

# Use vim keys in tab complete menu:
bindkey -M menuselect 'j' vi-backward-char
bindkey -M menuselect 'l' vi-up-line-or-history
bindkey -M menuselect 'Ã©' vi-forward-char
bindkey -M menuselect 'k' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

### Aliases
alias dt='git --git-dir=$HOME/dev/dotfiles/ --work-tree=$HOME'
alias cm='chezmoi'
alias as='android-studio'
alias ave='source ./venv/bin/activate'
alias mvn='mvn -gs "$XDG_CONFIG_HOME"/maven/settings.xml'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

# VIM mode
bindkey -v
export KEYTIMEOUT=1

### EDITORS
VISUAL=nvim
EDITOR=nvim

export VISUAL
export EDITOR

### Clean home directory
## Android
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME"/android
export ADB_VENDOR_KEY="$XDG_CONFIG_HOME"/android

## ccache
export CCACHE_CONFIGPATH="$XDG_CONFIG_HOME"/ccache/ccache.config
export CCACHE_DIR="$XDG_CACHE_HOME"/ccache

## CUDA (NVIDIA's parallel computing architecture and framework)
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv

## GnuPG
export GNUPGHOME="$XDG_DATA_HOME"/gnupg

## GTK
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc

## Java
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
# get current java path
{{- if and (.chezmoi.osRelease.idLike) (eq .chezmoi.osRelease.idLike "arch") }}
export JAVA_HOME="/usr/lib/jvm/default"
{{- else}}
export JAVA_HOME=$(update-alternatives --list | grep 'java ' | awk '{print $3}' | sed 's/openjdk.*/openjdk/')
{{- end}}
export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle

## Javascript
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc

## KDE
export KDEHOME="$XDG_CONFIG_HOME"/kde

## MySQL/MariaDB
export MYSQL_HISTFILE="$XDG_DATA_HOME"/mysql_history

## Ruby
export GEM_HOME="$XDG_DATA_HOME"/gem
export GEM_SPEC_CACHE="$XDG_CACHE_HOME"/gem

## Rust
export CARGO_HOME=$XDG_DATA_HOME/cargo
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"

## VS Code
export VSCODE_EXTENSIONS="${XDG_DATA_HOME}/code/extensions"

## ZSH
export HISTFILE="$XDG_DATA_HOME"/zsh/history
HISTFILE_DIR=$(dirname "${HISTFILE}")
if [[ ! -f "${HISTFILE_DIR}" ]]; then
	mkdir -p "${HISTFILE_DIR}"
fi

# Powerlevel10k
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f "$XDG_CONFIG_HOME"/p10k.zsh ]] && source "$XDG_CONFIG_HOME"/p10k.zsh

[ -f "${XDG_CONFIG_HOME}/fzf/fzf.zsh" ] && source "${XDG_CONFIG_HOME}/fzf/fzf.zsh"

### PATH
# Android studio
PATH=$XDG_DATA_HOME/android-studio/bin:$PATH
PATH=$PATH:/opt/gradle/gradle-6.5/bin:$PATH

# Composer
PATH=$HOME/.config/composer/vendor/bin:$PATH

# GitAhead
PATH=$HOME/dev/GitAhead:$PATH

# Mess-cleaner
PATH=$HOME/dev/mess-cleaner:$PATH

# Rust environment
PATH=$XDG_DATA_HOME/cargo/bin:$PATH

# Python virtualenv
PATH=$HOME/.local/bin:$PATH

export PATH

# Enable fzf completions
{{- if and (.chezmoi.osRelease.idLike) (eq .chezmoi.osRelease.idLike "arch") }}
source /usr/share/fzf/key-bindings.zsh
{{- else }}
source /usr/share/fzf/shell/key-bindings.zsh
{{- end}}

### Functions
getspec() {
	rpm2cpio $1 | cpio -civ '*.spec'
}
