# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# cleanup home directory
export XDG_CACHE_HOME=$HOME/.cache
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share

# Define a custom file for compdump
# oh-my-zsh uses this variable and calls compinit
ZSH_CACHE_DIR="${XDG_CACHE_HOME}/zsh"
if [[ ! -d "${ZSH_CACHE_DIR}" ]]; then
    mkdir -p "${ZSH_CACHE_DIR}"
fi
export ZSH_COMPDUMP=$ZSH_CACHE_DIR/.zcompdump-${(%):-%m}-${ZSH_VERSION}

### EDITORS
VISUAL=nvim
EDITOR=nvim

export VISUAL
export EDITOR

### Packaging
CHROOT="$HOME/packaging/chroot"
[ ! -d "${CHROOT}" ] || mkdir -p "${CHROOT}"
export CHROOT

### Clean home directory
## Android
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
export ANDROID_AVD_HOME="$XDG_DATA_HOME/android"
export ANDROID_HOME="${XDG_DATA_HOME}/android"
export ANDROID_EMULATOR_HOME="$XDG_DATA_HOME/android"
export ADB_VENDOR_KEY="$XDG_CONFIG_HOME/android"

## ccache
export CCACHE_CONFIGPATH="$XDG_CONFIG_HOME"/ccache/ccache.config
export CCACHE_DIR="$XDG_CACHE_HOME"/ccache

## CUDA (NVIDIA's parallel computing architecture and framework)
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv

## GO
export GOPATH="$XDG_DATA_HOME"/go

## GnuPG
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
if [[ ! -d "${GNUPGHOME}" ]]; then
    mkdir -p "${GNUPGHOME}"
fi

## GTK
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc

## Java
export SDKMAN_DIR="$XDG_DATA_HOME/sdkman"

export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
JAVA_HOME="$SDKMAN_DIR/candidates/java/current"

export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle

## Javascript
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc

## KDE
export KDEHOME="$XDG_CONFIG_HOME"/kde

## MySQL/MariaDB
export MYSQL_HISTFILE="$XDG_DATA_HOME"/mysql_history

## neovim
export COC_EXTENSIONS_HOME="$XDG_CONFIG_HOME/coc/extensions"

## Perl
export PERL_HOME="${HOME}/perl5"
export PERL5LIB="${PERL_HOME}/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="${PELR_HOME}${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"${PERL_HOME}\""
export PERL_MM_OPT="INSTALL_BASE=${PERL_HOME}"

## Ruby
export GEM_HOME="${XDG_DATA_HOME}/gem"
export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem"
export BUNDLE_USER_CONFIG="${XDG_CONFIG_HOME}/bundle"
export BUNDLE_USER_CACHE="${XDG_CACHE_HOME}/bundle"
export BUNDLE_USER_PLUGIN="${XDG_DATA_HOME}/bundle"
export SOLARGRAPH_CACHE="${XDG_CACHE_HOME}/solargraph"

## Rust
export CARGO_HOME=$XDG_DATA_HOME/cargo
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"

## VS Code
export VSCODE_EXTENSIONS="${XDG_DATA_HOME}/VSCodium/extensions"

## ZSH
export HISTFILE="$XDG_DATA_HOME"/zsh/history
HISTFILE_DIR=$(dirname "${HISTFILE}")
if [[ ! -f "${HISTFILE_DIR}" ]]; then
    mkdir -p "${HISTFILE_DIR}"
fi

export ZPLUG_HOME=${XDG_DATA_HOME}/zplug
# make it easy to load modules using prezto
ZPLUG_REPOS=${XDG_DATA_HOME}/zprezto/contrib
if [[ ! -f "${ZPLUG_REPOS}" ]]; then
    mkdir -p "${ZPLUG_REPOS}"
fi
export ZPLUG_REPOS
export STARSHIP_CONFIG=~/.config/starship/config.toml
export FZF_PATH="${XDG_CONFIG_HOME}/fzf"
export FZF_PREVIEW_ADVANCED=true

### PATH
# Android studio
#PATH=$XDG_DATA_HOME/android-studio/bin:$PATH
PATH=$PATH:/opt/gradle/bin:$PATH

# Composer
PATH=$HOME/.config/composer/vendor/bin:$PATH

# Go
PATH=$XDG_DATA_HOME/go/bin/:$PATH

# Mess-cleaner
PATH=$HOME/programming/mess-cleaner:$PATH

# Perl
PATH=/usr/bin/core_perl:$PATH
PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"

# NeoVIM LSP
PATH="${XDG_DATA_HOME}/nvim/mason/bin:${PATH}"

# NPM
PATH=$XDG_DATA_HOME/npm/bin/:$PATH

# Ruby
PATH=$GEM_HOME/bin:$PATH
PATH="$HOME/.rvm/bin:$PATH"

# Rust environment
PATH=$XDG_DATA_HOME/cargo/bin:$PATH

# Python virtualenv
PATH=$HOME/.local/bin:$PATH

PATH=/opt/asdf-vm/bin/:$PATH

export PATH
